// @generated by protobuf-ts 2.9.6 with parameter generate_dependencies,force_server_none
// @generated from protobuf file "purchases.proto" (package "purchasesGrpc", syntax proto3)
// tslint:disable
import { SubscriptionService } from "./purchases";
import type { GetActiveSubscriptionReply } from "./purchases";
import type { GetActiveSubscriptionRequest } from "./purchases";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { PurchasesService } from "./purchases";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { VerifyTokenReply } from "./purchases";
import type { VerifyTokenRequest } from "./purchases";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service purchasesGrpc.PurchasesService
 */
export interface IPurchasesServiceClient {
  /**
   * @generated from protobuf rpc: Verify(purchasesGrpc.VerifyTokenRequest) returns (purchasesGrpc.VerifyTokenReply);
   */
  verify(
    input: VerifyTokenRequest,
    options?: RpcOptions
  ): UnaryCall<VerifyTokenRequest, VerifyTokenReply>;
}
/**
 * @generated from protobuf service purchasesGrpc.PurchasesService
 */
export class PurchasesServiceClient
  implements IPurchasesServiceClient, ServiceInfo
{
  typeName = PurchasesService.typeName;
  methods = PurchasesService.methods;
  options = PurchasesService.options;
  constructor(private readonly _transport: RpcTransport) {}
  /**
   * @generated from protobuf rpc: Verify(purchasesGrpc.VerifyTokenRequest) returns (purchasesGrpc.VerifyTokenReply);
   */
  verify(
    input: VerifyTokenRequest,
    options?: RpcOptions
  ): UnaryCall<VerifyTokenRequest, VerifyTokenReply> {
    const method = this.methods[0],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<VerifyTokenRequest, VerifyTokenReply>(
      "unary",
      this._transport,
      method,
      opt,
      input
    );
  }
}
/**
 * @generated from protobuf service purchasesGrpc.SubscriptionService
 */
export interface ISubscriptionServiceClient {
  /**
   * @generated from protobuf rpc: GetActiveSubscription(purchasesGrpc.GetActiveSubscriptionRequest) returns (purchasesGrpc.GetActiveSubscriptionReply);
   */
  getActiveSubscription(
    input: GetActiveSubscriptionRequest,
    options?: RpcOptions
  ): UnaryCall<GetActiveSubscriptionRequest, GetActiveSubscriptionReply>;
}
/**
 * @generated from protobuf service purchasesGrpc.SubscriptionService
 */
export class SubscriptionServiceClient
  implements ISubscriptionServiceClient, ServiceInfo
{
  typeName = SubscriptionService.typeName;
  methods = SubscriptionService.methods;
  options = SubscriptionService.options;
  constructor(private readonly _transport: RpcTransport) {}
  /**
   * @generated from protobuf rpc: GetActiveSubscription(purchasesGrpc.GetActiveSubscriptionRequest) returns (purchasesGrpc.GetActiveSubscriptionReply);
   */
  getActiveSubscription(
    input: GetActiveSubscriptionRequest,
    options?: RpcOptions
  ): UnaryCall<GetActiveSubscriptionRequest, GetActiveSubscriptionReply> {
    const method = this.methods[0],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<
      GetActiveSubscriptionRequest,
      GetActiveSubscriptionReply
    >("unary", this._transport, method, opt, input);
  }
}
