services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres

  rabbitmq:
    image: masstransit/rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 10s
      timeout: 5s
      retries: 3

  courses:
    image: courses
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__CoursesDatabase=Host=db;Username=postgres;Password=postgres;Database=courses_database
      - RabbitMQ__Host=rabbitmq
      - PurchasesServerApi=http://purchases:8080/api/v1/purchases/verify
    ports:
      - 5135:8080
    build:
      context: .
      dockerfile: Courses/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started

  notifications:
    image: notifications
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__NotificationsDatabase=Host=db;Username=postgres;Password=postgres;Database=notifications_database
      - RabbitMQ__Host=rabbitmq
    ports:
      - 5298:8080
    build:
      context: .
      dockerfile: Notifications/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started

  users:
    image: users
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__UsersDatabase=Host=db;Username=postgres;Password=postgres;Database=users_database
      - RabbitMQ__Host=rabbitmq
    ports:
      - 5288:8080
    build:
      context: .
      dockerfile: Users/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started

  purchases:
    image: purchases
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PurchasesDatabase=Host=db;Username=postgres;Password=postgres;Database=purchases_database
      - RabbitMQ__Host=rabbitmq
    ports:
      - 5036:8080
    build:
      context: .
      dockerfile: Purchases/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
