name: Publish Docker Images

on:
  release:
    types: [published]

env:
    PROJECT_NAME: onied
    SITE: https://debian-vds.freemyip.com
  
jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USER }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Setting environmental variables
              run: | 
                echo "services:" > docker-compose.override.yml
                echo "  frontend:" >> docker-compose.override.yml
                echo "    restart: unless-stopped" >> docker-compose.override.yml
                echo "    build:" >> docker-compose.override.yml
                echo "      args:" >> docker-compose.override.yml
                echo "        VITE_MAPBOX_API_KEY=\${{ secrets.MAPBOX_API_KEY }}" >> docker-compose.override.yml
                echo "        VITE_API_URL=\${{ env.SITE }}/api/v1/" >> docker-compose.override.yml
                echo "        VITE_VK_CLIENT_ID=\${{ secrets.VK_CLIENT_ID }}" >> docker-compose.override.yml
                echo "        VITE_REDIRECT_URL=\${{ env.SITE }}/oauth-redirect" >> docker-compose.override.yml
                echo "        VITE_VK_AUTH_URL=https://oauth.vk.com/authorize" >> docker-compose.override.yml
                echo "  users:" >> docker-compose.override.yml
                echo "    restart: unless-stopped" >> docker-compose.override.yml
                echo "    environment:" >> docker-compose.override.yml
                echo "      - Authentication__VK__ClientId=\${{ secrets.VK_CLIENT_ID }}" >> docker-compose.override.yml
                echo "      - Authentication__VK__ClientSecret=\${{ secrets.VK_CLIENT_SECRET }}" >> docker-compose.override.yml
                echo "  courses:" >> docker-compose.override.yml
                echo "    restart: unless-stopped" >> docker-compose.override.yml
                echo "  notifications:" >> docker-compose.override.yml
                echo "    restart: unless-stopped" >> docker-compose.override.yml
                echo "  purchases:" >> docker-compose.override.yml
                echo "    restart: unless-stopped" >> docker-compose.override.yml
                echo "  certificates:" >> docker-compose.override.yml
                echo "    restart: unless-stopped" >> docker-compose.override.yml
                echo "    environment:" >> docker-compose.override.yml
                echo "      - MAPBOX_API_KEY=\${{ secrets.MAPBOX_API_KEY }}" >> docker-compose.override.yml
            
            - name: Build Docker images
              run: docker compose build

            - name: Push Docker images
              run: docker compose push

            - name: Create a tarball of the docker-compose directory
              run: tar -czf ${{ env.PROJECT_NAME }}.tar.gz ./*

            - name: Copy tarball to remote server
              uses: appleboy/scp-action@master
              with:
                host: ${{ secrets.SSH_HOST }}
                port: ${{ secrets.SSH_PORT }}
                username: ${{ secrets.SSH_USER }}
                key: ${{ secrets.SSH_CD_KEY }}
                source: ${{ env.PROJECT_NAME }}.tar.gz
                target: ~/onied

            - name: SSH to remote server and deploy with Docker Compose
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.SSH_HOST }}
                port: ${{ secrets.SSH_PORT }}
                username: ${{ secrets.SSH_USER }}
                key: ${{ secrets.SSH_CD_KEY }}
                script: |
                  if [ $(docker container ls -q --filter name='misergeeevkpfu*' | wc -l) -gt 0 ]; then
                      docker stop $(docker container ls -q --filter name='misergeeevkpfu*');
                  else
                      echo 'No matching containers to stop.';
                  fi
                  cd ~/${{ env.PROJECT_NAME }}
                  tar -xzf ${{ env.PROJECT_NAME }}.tar.gz
                  docker compose pull
                  docker compose up -d
